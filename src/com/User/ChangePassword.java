package com.User;

import com.PlaceHolder.PlaceHolder;
import com.Connection.MyConnection;
import com.Interface.MyInterface;
import com.Interface.Regex;
import com.LoginRegister.LoginLayout;
import com.Register.Register;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

public class ChangePassword extends Register implements MyInterface{ // Kelas ChangePassword sebagai Subclass dari Kelas Register yang Mengimplementasikan MyInterface
    /*
       patternPassword: String hanya menerima [huruf, angka, beberapa simbol] dengan panjang minimal 8
    */
    private static final String patternPassword = "^[A-Za-z0-9#?!@$%^&*-]{8,12}$";
    
    // Constructor
    public ChangePassword(String username) {
        super(username);  // memanggil constructor dari superclass(Register)
        initComponents();
        getConnection();
        // membuat objek Kelas PlaceHolder yang akan diisi parameter("text_placeholder" , variable_name_layout);
        // Change Password
        PlaceHolder pl1 = new PlaceHolder("Old Password", pf_oldPassword);
        PlaceHolder pl2 = new PlaceHolder("New Password", pf_newPassword);
        PlaceHolder pl3 = new PlaceHolder("Confirm Password", pf_confirmPassword);
        
        hideeye_changePassword.setVisible(false);
        hideeye_changePassword1.setVisible(false);
        hideeye_changePassword2.setVisible(false);
        lbl_oldPassword_warning.setVisible(false);
        lbl_newPassword_warning.setVisible(false);
        lbl_confirmpassword_warning.setVisible(false);
    }
    
    public ChangePassword() {
        initComponents();
        getConnection();
    }
    // ------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        in_password = new javax.swing.JLabel();
        in_username = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pf_oldPassword = new javax.swing.JPasswordField();
        lbl_oldPassword_warning = new javax.swing.JLabel();
        showeye_changePassword1 = new javax.swing.JLabel();
        hideeye_changePassword1 = new javax.swing.JLabel();
        pf_newPassword = new javax.swing.JPasswordField();
        lbl_newPassword_warning = new javax.swing.JLabel();
        showeye_changePassword = new javax.swing.JLabel();
        hideeye_changePassword = new javax.swing.JLabel();
        pf_confirmPassword = new javax.swing.JPasswordField();
        lbl_confirmpassword_warning = new javax.swing.JLabel();
        showeye_changePassword2 = new javax.swing.JLabel();
        hideeye_changePassword2 = new javax.swing.JLabel();
        btn_change = new javax.swing.JButton();

        in_password.setText("jLabel3");

        in_username.setText("jLabel2");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Change Password");

        pf_oldPassword.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        pf_oldPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pf_oldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pf_oldPasswordActionPerformed(evt);
            }
        });
        pf_oldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pf_oldPasswordKeyReleased(evt);
            }
        });

        lbl_oldPassword_warning.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_oldPassword_warning.setForeground(new java.awt.Color(255, 0, 0));
        lbl_oldPassword_warning.setText("Old Password is wrong");

        showeye_changePassword1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        showeye_changePassword1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/eye.png"))); // NOI18N
        showeye_changePassword1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                showeye_changePassword1MousePressed(evt);
            }
        });

        hideeye_changePassword1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hideeye_changePassword1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/hide.png"))); // NOI18N
        hideeye_changePassword1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hideeye_changePassword1MousePressed(evt);
            }
        });

        pf_newPassword.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        pf_newPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pf_newPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pf_newPasswordActionPerformed(evt);
            }
        });
        pf_newPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pf_newPasswordKeyReleased(evt);
            }
        });

        lbl_newPassword_warning.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_newPassword_warning.setForeground(new java.awt.Color(255, 0, 0));
        lbl_newPassword_warning.setText("Password must be atleast 8 characters");

        showeye_changePassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        showeye_changePassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/eye.png"))); // NOI18N
        showeye_changePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                showeye_changePasswordMousePressed(evt);
            }
        });

        hideeye_changePassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hideeye_changePassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/hide.png"))); // NOI18N
        hideeye_changePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hideeye_changePasswordMousePressed(evt);
            }
        });

        pf_confirmPassword.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        pf_confirmPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pf_confirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pf_confirmPasswordActionPerformed(evt);
            }
        });
        pf_confirmPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pf_confirmPasswordKeyReleased(evt);
            }
        });

        lbl_confirmpassword_warning.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_confirmpassword_warning.setForeground(new java.awt.Color(255, 0, 0));
        lbl_confirmpassword_warning.setText("Password and Confirm Password doesn't macth");

        showeye_changePassword2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        showeye_changePassword2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/eye.png"))); // NOI18N
        showeye_changePassword2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                showeye_changePassword2MousePressed(evt);
            }
        });

        hideeye_changePassword2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hideeye_changePassword2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/hide.png"))); // NOI18N
        hideeye_changePassword2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hideeye_changePassword2MousePressed(evt);
            }
        });

        btn_change.setBackground(new java.awt.Color(102, 204, 0));
        btn_change.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btn_change.setForeground(new java.awt.Color(255, 255, 255));
        btn_change.setText("Change");
        btn_change.setBorder(null);
        btn_change.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_change.setFocusPainted(false);
        btn_change.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_changeMouseClicked(evt);
            }
        });
        btn_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbl_newPassword_warning, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pf_newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pf_oldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_oldPassword_warning, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_change, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pf_confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_confirmpassword_warning, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showeye_changePassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hideeye_changePassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showeye_changePassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hideeye_changePassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showeye_changePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hideeye_changePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pf_oldPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(showeye_changePassword1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hideeye_changePassword1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(lbl_oldPassword_warning)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pf_newPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(showeye_changePassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hideeye_changePassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(lbl_newPassword_warning)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pf_confirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(showeye_changePassword2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hideeye_changePassword2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(lbl_confirmpassword_warning)
                .addGap(37, 37, 37)
                .addComponent(btn_change, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pf_newPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pf_newPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pf_newPasswordActionPerformed

    private void pf_confirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pf_confirmPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pf_confirmPasswordActionPerformed

    private void btn_changeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_changeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_changeMouseClicked

    private void btn_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changeActionPerformed
        String newPass = pf_newPassword.getText();
        String oldPass = pf_oldPassword.getText();
        String confPass = pf_confirmPassword.getText();
        
        String username = in_username.getText(); // mengambil username
        String query = "SELECT * FROM register WHERE username='" + username + "'"; // mencari akun dengan username yang dinamis
        
        // update password dan confirm_password
        String updateQuery = "UPDATE register SET password ='" + newPass + "', confirm_password='" + confPass + "' WHERE username='" + username + "'";
        Connection connection = null;
        try {
            // query akan dieksekusi dan data akan ditampung oleh resultSet
            MyConnection.resultSet = MyConnection.statement.executeQuery(query);
            
            if(isFormEmpty()) { // validasi method, form tidak boleh ada yang kosong
                if(nPassword()) { // validasi method, newPassword Regex
                    if(MyConnection.resultSet.next()) { // jika username ditemukan/terdaftar
                        if(MyConnection.resultSet.getString("password").equals(oldPass)) { // jika password yang ada di database sama dengan oldPass
                            if(newPass.equals(confPass)) { // jika new Password sama dengan confirm Password
                                // deklarasi pesan pertanyaan konfirmasi = "Apakah anda benar ingin mengubah password?"
                                int input = JOptionPane.showConfirmDialog(null, "Are you sure you want to change your password?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                                if(input == JOptionPane.YES_OPTION) { // jika memilih, ya
                                    MyConnection.statement.executeUpdate(updateQuery); // password, confirm_password query akan diupdate
                                    // deklarasi pesan pertanyaan konfirmasi = "Password berhasil diubah, Apakah anda ingin melanjutkan?"
                                    int input2 = JOptionPane.showConfirmDialog(null,"Password has been changed\n" + "Do you want to continue?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                                    if (input2 == JOptionPane.YES_OPTION) { // jika memilih, ya
                                        clearFormChangePassword(); // menghapus form Change Password
                                        this.dispose();
                                    }else { // selain itu, memilih no
                                        LoginLayout login = new LoginLayout(); // membuat objek kelas LoginLayout
                                        login.setVisible(true); // memunculkan jendela Login
                                        this.dispose();
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btn_changeActionPerformed

    private void pf_confirmPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pf_confirmPasswordKeyReleased
        confirmPassword();
    }//GEN-LAST:event_pf_confirmPasswordKeyReleased

    private void pf_newPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pf_newPasswordKeyReleased
        newPassword();
    }//GEN-LAST:event_pf_newPasswordKeyReleased

    private void pf_oldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pf_oldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pf_oldPasswordActionPerformed

    private void pf_oldPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pf_oldPasswordKeyReleased
        checkOldPassword();
    }//GEN-LAST:event_pf_oldPasswordKeyReleased

    private void showeye_changePasswordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showeye_changePasswordMousePressed
        // Saat mengklik hidden eye password di Panel Change Password
        hideeye_changePassword.setVisible(true); // hideeye akan muncul dan password akan terlihat
        showeye_changePassword.setVisible(false); // showeye akan hilang
        pf_newPassword.setEchoChar((char)0); // mengeset/mengcasting newPassword field menjadi 0 dalam bentuk ascii, atau null.
    }//GEN-LAST:event_showeye_changePasswordMousePressed

    private void hideeye_changePasswordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideeye_changePasswordMousePressed
        // Saat mengklik hidden eye password di Panel Change Password
        showeye_changePassword.setVisible(true); /// show eye akan muncul dan password tidak akan terlihat
        hideeye_changePassword.setVisible(false); // hideeye akan hilang
        pf_newPassword.setEchoChar((char)8226); // mengeset/mengcasting newPassword field menjadi 8226 dalam bentuk ascii, atau simbol 'middle dot'.
    }//GEN-LAST:event_hideeye_changePasswordMousePressed

    private void showeye_changePassword1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showeye_changePassword1MousePressed
        // Saat mengklik hidden eye password di Panel Change Password
        hideeye_changePassword1.setVisible(true); // hideeye akan muncul dan password akan terlihat
        showeye_changePassword1.setVisible(false); // showeye akan hilang
        pf_oldPassword.setEchoChar((char)0); // mengeset/mengcasting oldPassword field menjadi 0 dalam bentuk ascii, atau null.
    }//GEN-LAST:event_showeye_changePassword1MousePressed

    private void hideeye_changePassword1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideeye_changePassword1MousePressed
        // Saat mengklik hidden eye password di Panel Change Password
        showeye_changePassword1.setVisible(true); /// show eye akan muncul dan password tidak akan terlihat
        hideeye_changePassword1.setVisible(false); // hideeye akan hilang
        pf_oldPassword.setEchoChar((char)8226); // mengeset/mengcasting oldPassword field menjadi 8226 dalam bentuk ascii, atau simbol 'middle dot'.
    }//GEN-LAST:event_hideeye_changePassword1MousePressed

    private void showeye_changePassword2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showeye_changePassword2MousePressed
        // Saat mengklik hidden eye password di Panel Change Password
        hideeye_changePassword2.setVisible(true); // hideeye akan muncul dan password akan terlihat
        showeye_changePassword2.setVisible(false); // showeye akan hilang
        pf_confirmPassword.setEchoChar((char)0); // mengeset/mengcasting confirmPassword field menjadi 0 dalam bentuk ascii, atau null.
    }//GEN-LAST:event_showeye_changePassword2MousePressed

    private void hideeye_changePassword2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideeye_changePassword2MousePressed
        // Saat mengklik hidden eye password di Panel Change Password
        showeye_changePassword2.setVisible(true); /// show eye akan muncul dan password tidak akan terlihat
        hideeye_changePassword2.setVisible(false); // hideeye akan hilang
        pf_confirmPassword.setEchoChar((char)8226); // mengeset/mengcasting confirmPassword field menjadi 8226 dalam bentuk ascii, atau simbol 'middle dot'.        
    }//GEN-LAST:event_hideeye_changePassword2MousePressed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_change;
    private javax.swing.JLabel hideeye_changePassword;
    private javax.swing.JLabel hideeye_changePassword1;
    private javax.swing.JLabel hideeye_changePassword2;
    public javax.swing.JLabel in_password;
    public javax.swing.JLabel in_username;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_confirmpassword_warning;
    private javax.swing.JLabel lbl_newPassword_warning;
    public javax.swing.JLabel lbl_oldPassword_warning;
    private javax.swing.JPasswordField pf_confirmPassword;
    private javax.swing.JPasswordField pf_newPassword;
    private javax.swing.JPasswordField pf_oldPassword;
    private javax.swing.JLabel showeye_changePassword;
    private javax.swing.JLabel showeye_changePassword1;
    private javax.swing.JLabel showeye_changePassword2;
    // End of variables declaration//GEN-END:variables
    
    
    public boolean isFormEmpty() {
        // jika salah satu form ada yang kosong
        if(pf_oldPassword.getText().equals("") || pf_newPassword.getText().equals("") || pf_confirmPassword.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Form cannot be empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false; // mengembalikan nilai false
        }else { // selain itu
            return true; // mengembalikan nilai true
        }
    }
    
    //---------------------
    
    // method mengkosongkan form
    public void clearFormChangePassword() {
        pf_oldPassword.setText("");
        pf_newPassword.setText("");
        pf_confirmPassword.setText("");
    }
    
    //---------------------
    
    public void checkOldPassword() {
        if(!pf_oldPassword.getText().equals(in_password.getText())) { // jika oldPassword field tidak sama dengan yang ada di database
            lbl_oldPassword_warning.setVisible(true); // pesan akan muncul
        }else { // selain itu
            lbl_oldPassword_warning.setVisible(false); // pesan tidak akan muncul
        }
    }
    
    //---------------------
    
    public void newPassword() {
        if(pf_newPassword.getText().matches(patternPassword)) { // jika inputan cocok
            lbl_newPassword_warning.setVisible(false); // pesan tidak akan muncul
        }else { // selain itu
            lbl_newPassword_warning.setVisible(true); // pesan akan muncul
        }  
    }
    
    public boolean nPassword() {
        if(pf_newPassword.getText().matches(patternPassword)) { // jika password baru cocok dengan regex
            return true; // mengembalikan nilai true
        }else { // selain itu
            return false; // mengembalikan nilai false
        }
    }
    
    //---------------------
    
    public void confirmPassword() {
        String newPassword = pf_newPassword.getText();
        String confirmPassword = pf_confirmPassword.getText();
        
        if(!newPassword.equals(confirmPassword)) { // jika password baru tidak cocok dengan confirm password
            lbl_confirmpassword_warning.setVisible(true); // pesan akan muncul
        }else { // selain itu
            lbl_confirmpassword_warning.setVisible(false); // pesan tidak akan muncul
        }  
    }
}
